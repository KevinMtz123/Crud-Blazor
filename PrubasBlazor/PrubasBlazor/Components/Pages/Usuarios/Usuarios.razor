@page "/Usuarios/usuarios"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc
@using System.Text.RegularExpressions
@using PrubasBlazor.Data.Entities
@using PrubasBlazor.Services
@rendermode InteractiveServer
@inject IUsuariosService UsuariosService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<style>
    .custom-card {
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        border: none;
    }

    .page-title {
        color: #2c3e50;
        font-size: 2rem;
        letter-spacing: 0.5px;
        position: relative;
        margin-bottom: 2rem;
    }

        .page-title:after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, #4CAF50, #2E7D32);
            border-radius: 2px;
        }

    .custom-table {
        border-collapse: separate;
        border-spacing: 0 8px;
    }

        .custom-table thead th {
            border: none;
            color: #6c757d;
            font-weight: 600;
            padding: 1rem;
            background-color: #f8f9fa;
        }

        .custom-table tbody tr {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.02);
            border-radius: 8px;
            transition: transform 0.2s;
        }

            .custom-table tbody tr:hover {
                transform: translateY(-2px);
                background-color: #f8f9fa;
            }

        .custom-table td {
            padding: 1rem;
            vertical-align: middle;
            border: none;
        }

    .btn-add {
        background: linear-gradient(45deg, #4CAF50, #2E7D32);
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 25px;
        transition: all 0.3s;
    }

        .btn-add:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        }

    .action-btn {
        border-radius: 20px;
        padding: 0.5rem 1.2rem;
        margin: 0 0.2rem;
        transition: all 0.3s;
    }

    .btn-view {
        background-color: #607D8B;
        border: none;
        color: white;
    }

    .btn-delete {
        background-color: white;
        border: 1px solid #dc3545;
        color: #dc3545;
    }

    .btn-view:hover {
        background-color: #455A64;
        transform: translateY(-2px);
    }

    .btn-delete:hover {
        background-color: #dc3545;
        color: white;
        transform: translateY(-2px);
    }

    .detail-card {
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        margin-top: 2rem;
    }

    .detail-field {
        margin-bottom: 1.5rem;
    }

    .detail-label {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 0.3rem;
    }

    .detail-value {
        color: #2c3e50;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .form-control {
        border-radius: 8px;
        padding: 0.8rem;
        border: 1px solid #e0e0e0;
    }

        .form-control:focus {
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
            border-color: #4CAF50;
        }
</style>

<div class="container-fluid py-5">
    <div class="custom-card card">
        <div class="card-body p-4">
            <h2 class="page-title text-center">Catálogo de Usuarios</h2>

            <div class="d-flex justify-content-end mb-4">
                <a class="btn btn-add text-white" href="Usuarios/addUsuario">
                    <i class="bi bi-plus-lg me-2"></i>Nuevo Usuario
                </a>
            </div>

            <div class="table-responsive">
                <table class="table custom-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>Email</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var usuario in usuariosNew)
                        {
                            <tr>
                                <td>#@usuario.Id</td>
                                <td>@usuario.Name</td>
                                <td>@usuario.LastName</td>
                                <td>@usuario.Email</td>
                                <td class="text-end">
                                    <button class="btn action-btn btn-view" @onclick="() => ViewDetails(usuario.Id)">
                                        <i class="bi bi-eye me-1"></i>Ver
                                    </button>
                                    <button class="btn action-btn btn-delete" @onclick="() => DeleteUsuario(usuario.Id)">
                                        <i class="bi bi-trash me-1"></i>Eliminar
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (selectedCliente != null)
    {
        <div class="custom-card detail-card">
            <div class="card-body p-4">
                <h3 class="text-center mb-4">Detalle del Usuario</h3>
                @if (!isEditing)
                {
                    <div class="d-flex justify-content-end mb-4">
                        <button class="btn btn-add text-white" @onclick="EnableEditing">
                            <i class="bi bi-pencil me-2"></i>Modificar
                        </button>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="detail-field">
                                <div class="detail-label">Folio</div>
                                <div class="detail-value">#@selectedCliente.Id</div>
                            </div>
                            <div class="detail-field">
                                <div class="detail-label">Nombre</div>
                                <div class="detail-value">@selectedCliente.Name</div>
                            </div>
                            <div class="detail-field">
                                <div class="detail-label">Apellido</div>
                                <div class="detail-value">@selectedCliente.LastName</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-field">
                                <div class="detail-label">Email</div>
                                <div class="detail-value">@selectedCliente.Email</div>
                            </div>
                            <div class="detail-field">
                                <div class="detail-label">Teléfono</div>
                                <div class="detail-value">@selectedCliente.Phone</div>
                            </div>
                            <div class="detail-field">
                                <div class="detail-label">Dirección</div>
                                <div class="detail-value">@selectedCliente.Address</div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <form @onsubmit="HandleValidSubmit">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Nombre</label>
                                    <input class="form-control" @bind-value="selectedCliente.Name" />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Apellido</label>
                                    <input class="form-control" @bind-value="selectedCliente.LastName" />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input class="form-control" @bind-value="selectedCliente.Email" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Teléfono</label>
                                    <input class="form-control" @bind-value="selectedCliente.Phone" />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Dirección</label>
                                    <input class="form-control" @bind-value="selectedCliente.Address" />
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end gap-2 mt-4">
                            <button type="button" class="btn btn-light action-btn" @onclick="CancelEdit">
                                Cancelar
                            </button>
                            <button type="submit" class="btn btn-add text-white">
                                <i class="bi bi-check2 me-2"></i>Guardar
                            </button>
                        </div>
                    </form>
                }
            </div>
        </div>
    }
</div>

@code {
    private (string?, string) message;
    private string? fileError;
    private string? errorMessage;
    private bool isEditing = false;

    private RenderFragment currentFragment => isEditing ? EditFragment : DisplayFragment;

    private List<Usuario> usuariosNew = new();
    private Usuario? selectedCliente;

    protected override async Task OnInitializedAsync()
    {
        usuariosNew = await UsuariosService.GetUsuarios();
    }

    private async Task ViewDetails(int id)
    {
        selectedCliente = await UsuariosService.GetUsuarioById(id);

    }
    private async Task DeleteUsuario(int id)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Confirmar eliminar cliente");
        if (confirmed)
        {
            await UsuariosService.DeleteUsuario(id);
            usuariosNew = await UsuariosService.GetUsuarios();
        }
    }
    private void EnableEditing()
    {
        isEditing = true;
    }
    private void CancelEdit()
    {
        isEditing = false;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (selectedCliente == null)
            {
                errorMessage = "No hay un cliente seleccionado.";
                return;
            }

            await UsuariosService.UpdateUsuario(selectedCliente);

            message = ("Cliente editado exitosamente", "success");
            isEditing = false;
        }
        catch (InvalidOperationException ex)
        {
            errorMessage = ex.Message;
        }
    }
    private RenderFragment DisplayFragment => @<div>
        <button class="btn btn-secondary alert-secondary float-end rounded-pill ps-4 pe-4" @onclick="EnableEditing">Modificar</button>
        <p><strong>Folio:</strong><br /> @selectedCliente?.Id</p>
        <p><strong>Razón Social:</strong><br /> @selectedCliente?.LastName</p>
        <p><strong>Razón Social:</strong><br /> @selectedCliente?.Name</p>
        <p><strong>RFC:</strong><br /> @selectedCliente?.Email</p>
        <p><strong>RFC:</strong><br /> @selectedCliente?.Phone</p>

    </div>;

    private RenderFragment EditFragment => @<div>
        <button class="boton custom-button" @onclick="HandleValidSubmit">Guardar</button>
        <button class="boton-red custom-button" @onclick="CancelEdit">Cancelar</button>

        <div class="mb-3">
            <label for="RFC"><strong>Name</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.Name" />

        </div>
        <div class="mb-3">
            <label for="RFC"><strong>Last Name</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.LastName" />

        </div>
        <div class="mb-3">
            <label for="RFC"><strong>Email</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.Email" />

        </div>
        <div class="mb-3">
            <label for="RFC"><strong>Address</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.Address" />

        </div>
        <div class="mb-3">
            <label for="RFC"><strong>Email</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.Email" />

        </div>
        <div class="mb-3">
            <label for="RFC"><strong>Phone</strong></label>

            <input id="RFC" class="form-control form-control-sm" @bind-value="selectedCliente.Phone" />

        </div>




    </div>;
}
